<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.example</groupId>
    <artifactId>sample-grpc</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <properties>
        <grpc-version>1.33.1</grpc-version>
        <!-- The protoc-version must be less than or equal to the runtime version. -->
        <protoc-version>3.12.0</protoc-version>
        <protobuf-runtime-version>3.12.0</protobuf-runtime-version>

        <etcd-version>0.0.18</etcd-version>
    </properties>

    <build>
        <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>1.6.1</version>
            </extension>
        </extensions>
        <plugins>
            <plugin>
              <!-- for detecting version mismatch for grpc
              https://stackoverflow.com/questions/59880287/nosuchmethodexception-and-noclassdeffounderror-in-grpc-protobuf-java -->
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-enforcer-plugin</artifactId>
              <version>1.4.1</version>
              <executions>
                <execution>
                  <id>enforce</id>
                  <goals>
                    <goal>enforce</goal>
                  </goals>
                  <configuration>
                    <rules>
                      <requireUpperBoundDeps/>
                    </rules>
                  </configuration>
                </execution>
              </executions>
            </plugin>
            <plugin>
                <!-- generates the *.proto spec Java classes -->
                <groupId>org.xolstice.maven.plugins</groupId>
                <artifactId>protobuf-maven-plugin</artifactId>
                <version>0.6.1</version>
                <configuration>
                    <protocArtifact>com.google.protobuf:protoc:${protoc-version}:exe:${os.detected.classifier}</protocArtifact>
                </configuration>
                <executions>
                    <execution>
                        <id>protoc-java</id>
                        <goals>
                            <goal>compile</goal>
                            <goal>test-compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>protoc-grpc</id>
                        <goals>
                            <goal>compile-custom</goal>
                        </goals>
                        <configuration>
                            <pluginId>grpc-java</pluginId>
                            <pluginArtifact>io.grpc:protoc-gen-grpc-java:${grpc-version}:exe:${os.detected.classifier}</pluginArtifact>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- ensures Java 8 -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>8</source>
                    <target>8</target>
                </configuration>
            </plugin>
            <plugin>
                <!-- Build an executable JAR -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                            <mainClass>com.example.Server</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>
<!--        <dependency>-->
<!--            <groupId>io.grpc</groupId>-->
<!--            <artifactId>grpc-context</artifactId>-->
<!--            <version>${grpc-version}</version>-->
<!--        </dependency>-->
<!--        <dependency>-->
<!--            <groupId>io.grpc</groupId>-->
<!--            <artifactId>grpc-api</artifactId>-->
<!--            <version>${grpc-version}</version>-->
<!--        </dependency>-->
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-protobuf</artifactId> <!-- grpc-protobuf-lite and grpc-protobuf-nano for Android use -->
            <version>${grpc-version}</version>
        </dependency>
        <!-- stub is used for client since don't need entire proto definition to call server -->
        <!-- source: https://grpc.io/docs/what-is-grpc/core-concepts/ -->
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-stub</artifactId>
            <version>${grpc-version}</version>
            <exclusions>
              <exclusion>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
              </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
            <version>${protobuf-runtime-version}</version>
        </dependency>
        <!-- for reflection in grpc debugging -->
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-all</artifactId>
            <version>${grpc-version}</version>
            <exclusions>
              <!-- from io.grpc:grpc-xds > io.opencensus:opencensus-proto -->
              <exclusion>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-protobuf</artifactId>
              </exclusion>
              <exclusion>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-stub</artifactId>
              </exclusion>
            </exclusions>
        </dependency>
        <!-- slf4j logging, choose one of slf4j-simple OR slf4j-log4j12
        https://stackoverflow.com/questions/7421612/slf4j-failed-to-load-class-org-slf4j-impl-staticloggerbinder -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.30</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>1.6.4</version>
            <exclusions>
              <exclusion>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
              </exclusion>
            </exclusions>
        </dependency>
        <!-- WebTarget for testing etcd datastore connection via the localhost:2379/health endpoint -->
        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>javax.ws.rs-api</artifactId>
            <version>2.1.1</version>
        </dependency>
        <!-- ClientBuilder used by ^^^ requires implementation
        https://howtodoinjava.com/resteasy/solved-java-lang-classnotfoundexception-org-glassfish-jersey-client-jerseyclientbuilder/ -->
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-client</artifactId>
            <version>3.0.2.Final</version>
            <exclusions>
              <exclusion>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
              </exclusion>
            </exclusions>
        </dependency>
        <!-- mapping from class to JSON string for ByteString protobuf format in etcd storage -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.12.0</version>
        </dependency>
        <!-- needed to access Cluster and Maintenance services from etcd rpc.proto -->
        <dependency>
            <groupId>io.etcd</groupId>
            <artifactId>jetcd-core</artifactId>
            <version>0.5.4</version>
            <exclusions>
              <exclusion>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
              </exclusion>
          </exclusions>
        </dependency>
        <!-- requires Java 8 or higher -->
        <dependency>
            <groupId>com.ibm.etcd</groupId>
            <artifactId>etcd-java</artifactId>
            <version>${etcd-version}</version>
            <exclusions>
              <exclusion>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
              </exclusion>
<!--              <exclusion>-->
<!--                <groupId>io.netty</groupId>-->
<!--                <artifactId>netty-common</artifactId>-->
<!--              </exclusion>-->
<!--              <exclusion>-->
<!--                <groupId>io.netty</groupId>-->
<!--                <artifactId>netty-buffer</artifactId>-->
<!--              </exclusion>-->
<!--              <exclusion>-->
<!--                <groupId>io.netty</groupId>-->
<!--                <artifactId>netty-transport</artifactId>-->
<!--              </exclusion>-->
<!--              <exclusion>-->
<!--                <groupId>io.netty</groupId>-->
<!--                <artifactId>netty-resolver</artifactId>-->
<!--              </exclusion>-->
            </exclusions>
        </dependency>
<!--        <dependency>-->
<!--            <groupId>io.grpc</groupId>-->
<!--            <artifactId>grpc-netty</artifactId>-->
<!--            <version>${grpc-version}</version>-->
<!--        </dependency>-->
        <!-- builder -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.16.16</version>
        </dependency>
        <!-- Testing -->
<!--        <dependency>-->
<!--            <groupId>io.grpc</groupId>-->
<!--            <artifactId>grpc-testing</artifactId>-->
<!--            <version>1.35.0</version>-->
<!--        </dependency>-->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

</project>
